# #!/usr/bin/perl
snippet #!
	#!/usr/bin/env perl

# Hash Pointer
snippet .
	 =>
# Function
snippet sub
	sub ${1:function_name} {
		${2:#body ...}
	}
# Conditional
snippet if
	if (${1}) {
		${2:# body...}
	}
# Conditional if..else
snippet ife
	if (${1}) {
		${2:# body...}
	}
	else {
		${3:# else...}
	}
# Conditional if..elsif..else
snippet ifee
	if (${1}) {
		${2:# body...}
	}
	elsif (${3}) {
		${4:# elsif...}
	}
	else {
		${5:# else...}
	}
# Conditional One-line
snippet xif
	${1:expression} if ${2:condition};${3}
# Unless conditional
snippet unless
	unless (${1}) {
		${2:# body...}
	}
# Unless conditional One-line
snippet xunless
	${1:expression} unless ${2:condition};${3}
# Try/Except
snippet eval
	eval {
		${1:# do something risky...}
	};
	if ($@) {
		${2:# handle failure...}
	}
# While Loop
snippet wh
	while (${1}) {
		${2:# body...}
	}
# While Loop One-line
snippet xwh
	${1:expression} while ${2:condition};${3}
# C-style For Loop
snippet cfor
	for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4:# body...}
	}
# For loop one-line
snippet xfor
	${1:expression} for @${2:array};${3}
# Foreach Loop
snippet for
	foreach my $${1:x} (@${2:array}) {
		${3:# body...}
	}
# Foreach Loop One-line
snippet fore
	${1:expression} foreach @${2:array};${3}
# Package
snippet cl
	package ${1:ClassName};

	use base qw(${2:ParentClass});

	sub new {
		my $class = shift;
		$class = ref $class if ref $class;
		my $self = bless {}, $class;
		$self;
	}

	1;${3}
# Read File
snippet slurp
	my $${1:var};
	{ local $/ = undef; local *FILE; open FILE, "<${2:file}"; $$1 = <FILE>; close FILE }${3}
# Strict
snippet strwar
	use strict;
	use warnings;
	${1}
# feature
snippet feature
	use feature qw( say ${1:switch state} );
	${2}
# open file
snippet openfile
	open my $${1:var}, "${2:mode}", "${3:file}";${4}
snippet warn
	warn sprintf("---[DEBUG]--- ${1:comment} [%s]", ${2:var});${3}
snippet start
	#!/usr/bin/env perl
	use strict;
	use warnings;
	use feature qw( say ${1:switch state} );
	${2}
snippet pod
	=head1 NAME

	${1:name}

	=head1 SYNOPSIS

		${2:synopsis}

	=head1 DESCRIPTION

	${3:desc}

	=head1 METHOD

	${4:method}

	=head1 AUTHOR

	Omid Houshyar <${5:email}>

	=cut
snippet podsub
	=${1:head} ${2:subname}

	=cut

	${3}
snippet method
	sub ${1:method} {
		my $self = shift;
		${2:#body}
	}
snippet mmethod
	sub ${1:method} {
		my ($self, ${2:#args}) = @_;
		${3:#body}
	}
snippet self
	my $${1:#self} = shift;
snippet selfargs
	my ($self, ${1:#args}) = @_;
snippet cb
	{
		on_succ => sub {${1:#on_succ}},
		on_err  => sub {${2:#on_err}},
	}${3}
snippet br
	$DB::single=1;${1}
